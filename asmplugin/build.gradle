plugins {
    id 'org.gradle.kotlin.kotlin-dsl' version '1.3.3'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}


dependencies {
    implementation gradleApi()
    implementation "com.android.tools.build:gradle:3.6.1"
    implementation "org.ow2.asm:asm:5.0.1"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

task sourcesJar1(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    if (project.hasProperty("android")) {
        from android.sourceSets.main.java.srcDirs
    }
}

task androidNativeJar(type: Jar) {
    classifier = 'so'
    from(new File(buildDir, 'libs'))
    include("**/*.so")
}

// 打包sourcesJar任务
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// 打包javadocJar任务
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

repositories {
    mavenCentral()
}

publishing {
    // 配置maven 仓库
    repositories { RepositoryHandler handler ->
        handler.mavenLocal()  // 发布到默认的 本地maven 仓库 ，路径： USER_HOME/.m2/repository/
    }
    // 配置发布产物
    publications { PublicationContainer publication ->
        // 名称可以随便定义，这里定义成 maven，是因为我的 aar 包是发布到 maven 仓库的，所以这里为了见名知义，定义成了 maven
        // 任务名称：maven
        reportMaven(MavenPublication) {// 容器可配置的信息 MavenPublication
            groupId = 'com.example.asmplugin'
            artifactId = 'asmplugin'
            version = '1.0.0'
            from components.java
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
